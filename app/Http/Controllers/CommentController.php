<?php

namespace App\Http\Controllers;

//////////////////////////////

use App\Http\Requests;
use Request;
use App\Comment;
use App\Http\Requests\CommentRequest;

use Auth;

use Illuminate\Support\Facades\Storage; //это для Storage перенос картинки из временной папки

class CommentController extends Controller
{
    public function index() // отображает главную
    {       

        $comments = Comment::OrderBy('title')->get();       
        
        return view('comment.index' , ['comments' => $comments]);
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public function store(Requests\CommentRequest $request) // сохранение статьи в БД и редирект её
    {   
        $comment = new Comment($request->all());
        //dd($comment);
        
        //смотрим есть ли авторизация пользователя. Если есть то записываем его auth::id, если авторизации нет, то берём имя пользователя из запроса

        if(is_null(Auth::id())) {

            if(is_null($comment['title'])) {
                $comment['title'] = "Аноним";   
            }

            $comment->save();  

        } else {

            $comment['user_id'] = Auth::id();
            $comment->save();
        }

        return redirect('/articles/' . $comment['article_id'] );       
           
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public function show($id) // передавали до этого $id
    {
         $comment = Comment::with('user')->findOrFail($id);

         dd($comment);
    }
}
